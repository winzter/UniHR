import 'dart:convert';
import '../../domain/entities/entities.dart';


List<EmployeeNetworkModel> employeeNetworkModelFromJson(String str) => List<EmployeeNetworkModel>.from(json.decode(str).map((x) => EmployeeNetworkModel.fromJson(x)));

String employeeNetworkModelToJson(List<EmployeeNetworkModel> data) => json.encode(List<dynamic>.from(data.map((x) => x.toJson())));

class EmployeeNetworkModel extends EmployeeNetworkEntity{


  EmployeeNetworkModel({
    required int? idEmployees,
    required DateTime? hiringDate,
    required String? employeeId,
    required String? titleTh,
    required String? firstnameTh,
    required String? lastnameTh,
    required String? nicknameTh,
    required String? titleEn,
    required String? firstnameEn,
    required String? lastnameEn,
    required String? nicknameEn,
    required String? telephoneMobile,
    required String? email,
    required int? idCompany,
    required dynamic idBranch,
    required int? idPosition,
    required int? isActive,
    required dynamic createDate,
    required dynamic createBy,
    required DateTime? updateDate,
    required int? updateBy,
    required String? positionCode,
    required String? positionName,
    required String? sectionCode,
    required String? sectionName,
    required String? departmentCode,
    required String? departmentName,
    required int? idDivision,
    required int? idDepartment,
    required int? idSection,
    required int? idBusinessUnit,
    required String? businessUnitName,
    required String? businessUnitCode,
    required String? divisionCode,
    required String? divisionName,
    required String? companyName,
    required String? imageName,
    required String? managerLv1FirstnameTh,
    required String? managerLv1LastnameTh,
    required String? managerLv1FirstnameEn,
    required String? managerLv1LastnameEn,
    required String? managerLv1Email,
    required String? managerLv2FirstnameTh,
    required String? managerLv2LastnameTh,
    required String? managerLv2FirstnameEn,
    required String? managerLv2LastnameEn,
    required String? managerLv2Email,
    required int? idManagerLv1,
    required dynamic idManagerLv2,
    required String? workingType,
    required int? idPaymentType,
    required int? isTerminate,
    required String? imageProfile,
    required String? name,
  }):super(
    idEmployees:idEmployees,
    hiringDate:hiringDate,
    employeeId:employeeId,
    titleTh:titleTh,
    firstnameTh:firstnameTh,
    lastnameTh:lastnameTh,
    nicknameTh:nicknameTh,
    titleEn:titleEn,
    firstnameEn:firstnameEn,
    lastnameEn:lastnameEn,
    nicknameEn:nicknameEn,
    telephoneMobile:telephoneMobile,
    email:email,
    idCompany:idCompany,
    idBranch:idBranch,
    idPosition:idPosition,
    isActive:isActive,
    createDate:createDate,
    createBy:createBy,
    updateDate:updateDate,
    updateBy:updateBy,
    positionCode:positionCode,
    positionName:positionName,
    sectionCode:sectionCode,
    sectionName:sectionName,
    departmentCode:departmentCode,
    departmentName:departmentName,
    idDivision:idDivision,
    idDepartment:idDepartment,
    idSection:idSection,
    idBusinessUnit:idBusinessUnit,
    businessUnitName:businessUnitName,
    businessUnitCode:businessUnitCode,
    divisionCode:divisionCode,
    divisionName:divisionName,
    companyName:companyName,
    imageName:imageName,
    managerLv1FirstnameTh:managerLv1FirstnameTh,
    managerLv1LastnameTh:managerLv1LastnameTh,
    managerLv1FirstnameEn:managerLv1FirstnameEn,
    managerLv1LastnameEn:managerLv1LastnameEn,
    managerLv1Email:managerLv1Email,
    managerLv2FirstnameTh:managerLv2FirstnameTh,
    managerLv2LastnameTh:managerLv2LastnameTh,
    managerLv2FirstnameEn:managerLv2FirstnameEn,
    managerLv2LastnameEn:managerLv2LastnameEn,
    managerLv2Email:managerLv2Email,
    idManagerLv1:idManagerLv1,
    idManagerLv2:idManagerLv2,
    workingType:workingType,
    idPaymentType:idPaymentType,
    isTerminate:isTerminate,
    imageProfile:imageProfile,
    name:name,
);

  factory EmployeeNetworkModel.fromJson(Map<String, dynamic> json) => EmployeeNetworkModel(
    idEmployees: json["idEmployees"],
    hiringDate: json["hiringDate"] == null ? null : DateTime.parse(json["hiringDate"]),
    employeeId: json["employeeID"],
    titleTh: json["title_TH"],
    firstnameTh: json["firstname_TH"],
    lastnameTh: json["lastname_TH"],
    nicknameTh: json["nickname_TH"],
    titleEn: json["title_EN"],
    firstnameEn: json["firstname_EN"],
    lastnameEn: json["lastname_EN"],
    nicknameEn: json["nickname_EN"],
    telephoneMobile: json["telephoneMobile"],
    email: json["email"],
    idCompany: json["idCompany"],
    idBranch: json["idBranch"],
    idPosition: json["idPosition"],
    isActive: json["isActive"],
    createDate: json["createDate"],
    createBy: json["createBy"],
    updateDate: json["updateDate"] == null ? null : DateTime.parse(json["updateDate"]),
    updateBy: json["updateBy"],
    positionCode: json["positionCode"],
    positionName: json["positionName"],
    sectionCode: json["sectionCode"],
    sectionName: json["sectionName"],
    departmentCode: json["departmentCode"],
    departmentName: json["departmentName"],
    idDivision: json["idDivision"],
    idDepartment: json["idDepartment"],
    idSection: json["idSection"],
    idBusinessUnit: json["idBusinessUnit"],
    businessUnitName: json["businessUnitName"],
    businessUnitCode: json["businessUnitCode"],
    divisionCode: json["divisionCode"],
    divisionName: json["divisionName"],
    companyName: json["companyName"],
    imageName: json["imageName"],
    managerLv1FirstnameTh: json["managerLV1_firstname_TH"],
    managerLv1LastnameTh: json["managerLV1_lastname_TH"],
    managerLv1FirstnameEn: json["managerLV1_firstname_EN"],
    managerLv1LastnameEn: json["managerLV1_lastname_EN"],
    managerLv1Email: json["managerLV1_email"],
    managerLv2FirstnameTh: json["managerLV2_firstname_TH"],
    managerLv2LastnameTh: json["managerLV2_lastname_TH"],
    managerLv2FirstnameEn: json["managerLV2_firstname_EN"],
    managerLv2LastnameEn: json["managerLV2_lastname_EN"],
    managerLv2Email: json["managerLV2_email"],
    idManagerLv1: json["idManagerLV1"],
    idManagerLv2: json["idManagerLV2"],
    workingType: json["workingType"],
    idPaymentType: json["idPaymentType"],
    isTerminate: json["isTerminate"],
    imageProfile: json["imageProfile"],
    name: json["name"],
  );

  Map<String, dynamic> toJson() => {
    "idEmployees": idEmployees,
    "hiringDate": hiringDate?.toIso8601String(),
    "employeeID": employeeId,
    "title_TH": titleTh,
    "firstname_TH": firstnameTh,
    "lastname_TH": lastnameTh,
    "nickname_TH": nicknameTh,
    "title_EN": titleEn,
    "firstname_EN": firstnameEn,
    "lastname_EN": lastnameEn,
    "nickname_EN": nicknameEn,
    "telephoneMobile": telephoneMobile,
    "email": email,
    "idCompany": idCompany,
    "idBranch": idBranch,
    "idPosition": idPosition,
    "isActive": isActive,
    "createDate": createDate,
    "createBy": createBy,
    "updateDate": updateDate?.toIso8601String(),
    "updateBy": updateBy,
    "positionCode": positionCode,
    "positionName": positionName,
    "sectionCode": sectionCode,
    "sectionName": sectionName,
    "departmentCode": departmentCode,
    "departmentName": departmentName,
    "idDivision": idDivision,
    "idDepartment": idDepartment,
    "idSection": idSection,
    "idBusinessUnit": idBusinessUnit,
    "businessUnitName": businessUnitName,
    "businessUnitCode": businessUnitCode,
    "divisionCode": divisionCode,
    "divisionName": divisionName,
    "companyName": companyName,
    "imageName": imageName,
    "managerLV1_firstname_TH": managerLv1FirstnameTh,
    "managerLV1_lastname_TH": managerLv1LastnameTh,
    "managerLV1_firstname_EN": managerLv1FirstnameEn,
    "managerLV1_lastname_EN": managerLv1LastnameEn,
    "managerLV1_email": managerLv1Email,
    "managerLV2_firstname_TH": managerLv2FirstnameTh,
    "managerLV2_lastname_TH": managerLv2LastnameTh,
    "managerLV2_firstname_EN": managerLv2FirstnameEn,
    "managerLV2_lastname_EN": managerLv2LastnameEn,
    "managerLV2_email": managerLv2Email,
    "idManagerLV1": idManagerLv1,
    "idManagerLV2": idManagerLv2,
    "workingType": workingType,
    "idPaymentType": idPaymentType,
    "isTerminate": isTerminate,
    "imageProfile": imageProfile,
    "name": name,
  };
}
