import 'dart:convert';
import '../../domain/entities/entities.dart';

EachEmployeeNetworkModel eachEmployeeNetworkModelFromJson(String str) => EachEmployeeNetworkModel.fromJson(json.decode(str));

// String eachEmployeeNetworkModelToJson(EachEmployeeNetworkModel data) => json.encode(data.toJson());

class EachEmployeeNetworkModel extends EachEmployeeEntity{


  EachEmployeeNetworkModel({
    required int? idEmployees,
    required String? employeeId,
    required String? titleTh,
    required String? firstnameTh,
    required String? lastnameTh,
    required String? nicknameTh,
    required String? titleEn,
    required DateTime? hiringDate,
    required String? personalId,
    required String? email,
    required String? telephoneMobile,
    required String? positionName,
    required String? sectionName,
    required String? departmentName,
    required String? divisionName,
    required String? address,
    required String? houseNo,
    required String? village,
    required String? villageNo,
    required String? alley,
    required String? road,
    required String? subDistrict,
    required String? district,
    required String? provience,
    required String? areaCode,
    required String? firstnameEn,
    required String? lastnameEn,
    required String? nicknameEn,
    required dynamic createDate,
    required String? overview,
    required int? idManagerLv1,
    required dynamic idManagerLv2,
    required int? idPaymentType,
    required int? idCompany,
    required String? imageName,
    required String? maritalStatus,
    required String? managerLv1FirstnameTh,
    required String? managerLv1LastnameTh,
    required String? managerLv1FirstnameEn,
    required String? managerLv1LastnameEn,
    required String? managerLv1Email,
    required dynamic managerLv2FirstnameTh,
    required dynamic managerLv2LastnameTh,
    required dynamic managerLv2FirstnameEn,
    required dynamic managerLv2LastnameEn,
    required dynamic managerLv2Email,
    required String? managerLv1ImageName,
    required dynamic managerLv2ImageName,
    required dynamic managerLv1PositionName,
    required dynamic managerLv2PositionName,
    required String? emergencyContact,
    required String? emergencyRelationship,
    required String? emergencyPhone,
    required DateTime? birthday,
    required String? workingType,
    required String? companyName,
    required String? imageProfile,
    required String? managerLv1ImageProfile,
    required dynamic managerLv2ImageProfile,
    required List<EducationModel>? educations,
    required List<InterestModel>? interests,
    required List<SkillModel>? skills,
    required List<dynamic>? list,
  }):super(
idEmployees:idEmployees,
employeeId:employeeId,
titleTh:titleTh,
firstnameTh:firstnameTh,
lastnameTh:lastnameTh,
nicknameTh:nicknameTh,
titleEn:titleEn,
hiringDate:hiringDate,
personalId:personalId,
email:email,
telephoneMobile:telephoneMobile,
positionName:positionName,
sectionName:sectionName,
departmentName:departmentName,
divisionName:divisionName,
address:address,
houseNo:houseNo,
village:village,
villageNo:villageNo,
alley:alley,
road:road,
subDistrict:subDistrict,
district:district,
provience:provience,
areaCode:areaCode,
firstnameEn:firstnameEn,
lastnameEn:lastnameEn,
nicknameEn:nicknameEn,
createDate:createDate,
overview:overview,
idManagerLv1:idManagerLv1,
idManagerLv2:idManagerLv2,
idPaymentType:idPaymentType,
idCompany:idCompany,
imageName:imageName,
maritalStatus:maritalStatus,
managerLv1FirstnameTh:managerLv1FirstnameTh,
managerLv1LastnameTh:managerLv1LastnameTh,
managerLv1FirstnameEn:managerLv1FirstnameEn,
managerLv1LastnameEn:managerLv1LastnameEn,
managerLv1Email:managerLv1Email,
managerLv2FirstnameTh:managerLv2FirstnameTh,
managerLv2LastnameTh:managerLv2LastnameTh,
managerLv2FirstnameEn:managerLv2FirstnameEn,
managerLv2LastnameEn:managerLv2LastnameEn,
managerLv2Email:managerLv2Email,
managerLv1ImageName:managerLv1ImageName,
managerLv2ImageName:managerLv2ImageName,
managerLv1PositionName:managerLv1PositionName,
managerLv2PositionName:managerLv2PositionName,
emergencyContact:emergencyContact,
emergencyRelationship:emergencyRelationship,
emergencyPhone:emergencyPhone,
birthday:birthday,
workingType:workingType,
companyName:companyName,
imageProfile:imageProfile,
managerLv1ImageProfile:managerLv1ImageProfile,
managerLv2ImageProfile:managerLv2ImageProfile,
educations:educations,
interests:interests,
skills:skills,
list:list,
);

  factory EachEmployeeNetworkModel.fromJson(Map<String, dynamic> json) => EachEmployeeNetworkModel(
    idEmployees: json["idEmployees"],
    employeeId: json["employeeID"],
    titleTh: json["title_TH"],
    firstnameTh: json["firstname_TH"],
    lastnameTh: json["lastname_TH"],
    nicknameTh: json["nickname_TH"],
    titleEn: json["title_EN"],
    hiringDate: json["hiringDate"] == null ? null : DateTime.parse(json["hiringDate"]),
    personalId: json["personalID"],
    email: json["email"],
    telephoneMobile: json["telephoneMobile"],
    positionName: json["positionName"],
    sectionName: json["sectionName"],
    departmentName: json["departmentName"],
    divisionName: json["divisionName"],
    address: json["address"],
    houseNo: json["houseNo"],
    village: json["village"],
    villageNo: json["villageNo"],
    alley: json["alley"],
    road: json["road"],
    subDistrict: json["subDistrict"],
    district: json["district"],
    provience: json["provience"],
    areaCode: json["areaCode"],
    firstnameEn: json["firstname_EN"],
    lastnameEn: json["lastname_EN"],
    nicknameEn: json["nickname_EN"],
    createDate: json["createDate"],
    overview: json["overview"],
    idManagerLv1: json["idManagerLV1"],
    idManagerLv2: json["idManagerLV2"],
    idPaymentType: json["idPaymentType"],
    idCompany: json["idCompany"],
    imageName: json["imageName"],
    maritalStatus: json["maritalStatus"],
    managerLv1FirstnameTh: json["managerLV1_firstname_TH"],
    managerLv1LastnameTh: json["managerLV1_lastname_TH"],
    managerLv1FirstnameEn: json["managerLV1_firstname_EN"],
    managerLv1LastnameEn: json["managerLV1_lastname_EN"],
    managerLv1Email: json["managerLV1_email"],
    managerLv2FirstnameTh: json["managerLV2_firstname_TH"],
    managerLv2LastnameTh: json["managerLV2_lastname_TH"],
    managerLv2FirstnameEn: json["managerLV2_firstname_EN"],
    managerLv2LastnameEn: json["managerLV2_lastname_EN"],
    managerLv2Email: json["managerLV2_email"],
    managerLv1ImageName: json["managerLV1_imageName"],
    managerLv2ImageName: json["managerLV2_imageName"],
    managerLv1PositionName: json["managerLV1_positionName"],
    managerLv2PositionName: json["managerLV2_positionName"],
    emergencyContact: json["emergencyContact"],
    emergencyRelationship: json["emergencyRelationship"],
    emergencyPhone: json["emergencyPhone"],
    birthday: json["birthday"] == null ? null : DateTime.parse(json["birthday"]),
    workingType: json["workingType"],
    companyName: json["companyName"],
    imageProfile: json["imageProfile"],
    managerLv1ImageProfile: json["managerLV1_imageProfile"],
    managerLv2ImageProfile: json["managerLV2_imageProfile"],
    educations: json["educations"] == null ? [] : List<EducationModel>.from(json["educations"]!.map((x) => EducationModel.fromJson(x))),
    interests: json["interests"] == null ? [] : List<InterestModel>.from(json["interests"]!.map((x) => InterestModel.fromJson(x))),
    skills: json["skills"] == null ? [] : List<SkillModel>.from(json["skills"]!.map((x) => SkillModel.fromJson(x))),
    list: json["list"] == null ? [] : List<dynamic>.from(json["list"]!.map((x) => x)),
  );

  // Map<String, dynamic> toJson() => {
  //   "idEmployees": idEmployees,
  //   "employeeID": employeeId,
  //   "title_TH": titleTh,
  //   "firstname_TH": firstnameTh,
  //   "lastname_TH": lastnameTh,
  //   "nickname_TH": nicknameTh,
  //   "title_EN": titleEn,
  //   "hiringDate": hiringDate?.toIso8601String(),
  //   "personalID": personalId,
  //   "email": email,
  //   "telephoneMobile": telephoneMobile,
  //   "positionName": positionName,
  //   "sectionName": sectionName,
  //   "departmentName": departmentName,
  //   "divisionName": divisionName,
  //   "address": address,
  //   "houseNo": houseNo,
  //   "village": village,
  //   "villageNo": villageNo,
  //   "alley": alley,
  //   "road": road,
  //   "subDistrict": subDistrict,
  //   "district": district,
  //   "provience": provience,
  //   "areaCode": areaCode,
  //   "firstname_EN": firstnameEn,
  //   "lastname_EN": lastnameEn,
  //   "nickname_EN": nicknameEn,
  //   "createDate": createDate,
  //   "overview": overview,
  //   "idManagerLV1": idManagerLv1,
  //   "idManagerLV2": idManagerLv2,
  //   "idPaymentType": idPaymentType,
  //   "idCompany": idCompany,
  //   "imageName": imageName,
  //   "maritalStatus": maritalStatus,
  //   "managerLV1_firstname_TH": managerLv1FirstnameTh,
  //   "managerLV1_lastname_TH": managerLv1LastnameTh,
  //   "managerLV1_firstname_EN": managerLv1FirstnameEn,
  //   "managerLV1_lastname_EN": managerLv1LastnameEn,
  //   "managerLV1_email": managerLv1Email,
  //   "managerLV2_firstname_TH": managerLv2FirstnameTh,
  //   "managerLV2_lastname_TH": managerLv2LastnameTh,
  //   "managerLV2_firstname_EN": managerLv2FirstnameEn,
  //   "managerLV2_lastname_EN": managerLv2LastnameEn,
  //   "managerLV2_email": managerLv2Email,
  //   "managerLV1_imageName": managerLv1ImageName,
  //   "managerLV2_imageName": managerLv2ImageName,
  //   "managerLV1_positionName": managerLv1PositionName,
  //   "managerLV2_positionName": managerLv2PositionName,
  //   "emergencyContact": emergencyContact,
  //   "emergencyRelationship": emergencyRelationship,
  //   "emergencyPhone": emergencyPhone,
  //   "birthday": birthday?.toIso8601String(),
  //   "workingType": workingType,
  //   "companyName": companyName,
  //   "imageProfile": imageProfile,
  //   "managerLV1_imageProfile": managerLv1ImageProfile,
  //   "managerLV2_imageProfile": managerLv2ImageProfile,
  //   "educations": educations == null ? [] : List<dynamic>.from(educations!.map((x) => x.toJson())),
  //   "interests": interests == null ? [] : List<dynamic>.from(interests!.map((x) => x.toJson())),
  //   "skills": skills == null ? [] : List<dynamic>.from(skills!.map((x) => x.toJson())),
  //   "list": list == null ? [] : List<dynamic>.from(list!.map((x) => x)),
  // };
}

class EducationModel extends Education{


  EducationModel({
    required int? idEducations,
    required String? degree,
    required String? university,
    required String? faculty,
    required String? major,
    required int? fromYear,
    required int? endYear,
    required String? gpa,
    required int? idEmployees,
  }):super(
    idEducations:idEducations,
    degree:degree,
    university:university,
    faculty:faculty,
    major:major,
    fromYear:fromYear,
    endYear:endYear,
    gpa:gpa,
    idEmployees:idEmployees,
);

  factory EducationModel.fromJson(Map<String, dynamic> json) => EducationModel(
    idEducations: json["idEducations"],
    degree: json["degree"],
    university: json["university"],
    faculty: json["faculty"],
    major: json["major"],
    fromYear: json["fromYear"],
    endYear: json["endYear"],
    gpa: json["gpa"],
    idEmployees: json["idEmployees"],
  );

  Map<String, dynamic> toJson() => {
    "idEducations": idEducations,
    "degree": degree,
    "university": university,
    "faculty": faculty,
    "major": major,
    "fromYear": fromYear,
    "endYear": endYear,
    "gpa": gpa,
    "idEmployees": idEmployees,
  };
}

class InterestModel extends Interest{


  InterestModel({
    required int? idInterest,
    required int? idEmployees,
    required String? interest,
  }):super(
    idInterest:idInterest,
    idEmployees:idEmployees,
    interest:interest,
);

  factory InterestModel.fromJson(Map<String, dynamic> json) => InterestModel(
    idInterest: json["idInterest"],
    idEmployees: json["idEmployees"],
    interest: json["Interest"],
  );

  Map<String, dynamic> toJson() => {
    "idInterest": idInterest,
    "idEmployees": idEmployees,
    "Interest": interest,
  };
}

class SkillModel extends Skill{


  SkillModel({
    required int? idSkill,
    required int? idEmployees,
    required String? skill,
  }):super(
    idSkill:idSkill,
    idEmployees:idEmployees,
    skill:skill,
);

  factory SkillModel.fromJson(Map<String, dynamic> json) => SkillModel(
    idSkill: json["idSkill"],
    idEmployees: json["idEmployees"],
    skill: json["skill"],
  );

  Map<String, dynamic> toJson() => {
    "idSkill": idSkill,
    "idEmployees": idEmployees,
    "skill": skill,
  };
}
